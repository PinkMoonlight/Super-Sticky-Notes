{"version":3,"sources":["Header.js","Footer.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","newNote","onChange","onSearch","type","placeholder","value","searchText","Footer","class","Note","updateTitle","event","id","_this","note","updatedValue","target","onType","updateDescription","deleteNote","onDelete","this","title","description","Component","NotesList","notesList","notes","filter","doesMatchSearch","map","src_Note","key","App","state","Date","now","updatedList","concat","Object","toConsumableArray","setState","updatedKey","updated","e","searchWord","toLowerCase","searchResults","includes","objectSpread","notesString","localStorage","getItem","savedNotes","JSON","parse","stringify","setItem","src_Header","src_NotesList","src_Footer","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.7e95b4bd.chunk.js","sourcesContent":["import React from \"react\";\n\nlet Header = props => {\n  return (\n    <header>\n      <h1 className=\"app-header__title\">Super Sticky Notes</h1>\n      <aside className=\"app-header__controls\">\n        <button onClick={props.newNote} className=\"add-new\">\n          + New Note\n        </button>\n        <input\n          onChange={props.onSearch}\n          className=\"search\"\n          type=\"text\"\n          placeholder=\"Type here to search...\"\n          value={props.searchText}\n        />\n      </aside>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nlet Footer = () => {\n    return (\n        <footer class=\"footer\">\n            <p>React functionality built by Kate Fisher. HTML & CSS designed &copy; by\n        Skillcrush</p>\n        </footer>\n    );\n};\n\nexport default Footer;","import React, { Component } from \"react\";\n\nclass Note extends Component {\n  updateTitle = event => {\n    let id = this.props.note.id;\n    let updatedValue = event.target.value;\n    this.props.onType(id, \"title\", updatedValue);\n  };\n\n  updateDescription = event => {\n    let id = this.props.note.id;\n    let updatedValue = event.target.value;\n    this.props.onType(id, \"description\", updatedValue);\n  };\n\n  deleteNote = () => {\n    let id = this.props.note.id;\n    this.props.onDelete(id);\n  };\n\n  render() {\n    return (\n      <li className=\"note\">\n        <input\n          onChange={this.updateTitle}\n          className=\"note__title\"\n          type=\"text\"\n          placeholder=\"Title\"\n          value={this.props.note.title}\n        />\n        <textarea\n          onChange={this.updateDescription}\n          className=\"note__description\"\n          placeholder=\"Description...\"\n          value={this.props.note.description}\n        />\n        <span className=\"note__delete\" onClick={this.deleteNote}>\n          X\n        </span>\n      </li>\n    );\n  }\n}\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note.js\";\n\nlet NotesList = props => {\n  const renderNote = note => (\n    <Note\n      key={note.id}\n      note={note}\n      onType={props.onType}\n      onDelete={props.onDelete}\n    />\n  );\n  let searchList = props.notes.filter(note => note.doesMatchSearch);\n  let notesList = searchList.map(renderNote);\n  return <ul className=\"notes-list\">{notesList}</ul>;\n};\n\nexport default NotesList;\n","import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport Footer from \"./Footer.js\";\nimport NotesList from \"./NotesList\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }\n    ],\n    searchText: \"\"\n  };\n  componentDidMount() {\n    let notesString = localStorage.getItem(\"notesString\");\n    if (notesString) {\n      let savedNotes = JSON.parse(notesString);\n      this.setState({ notes: savedNotes });\n    }\n  }\n  componentDidUpdate() {\n    let notesString = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"notesString\", notesString);\n  }\n\n  newNote = () => {\n    let blankNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    let updatedList = [blankNote, ...this.state.notes];\n    this.setState({ notes: updatedList });\n  };\n\n  onDelete = id => {\n    let updatedList = this.state.notes.filter(note => note.id !== id);\n    this.setState({ notes: updatedList });\n  };\n\n  onType = (id, updatedKey, updatedValue) => {\n    let notes = this.state.notes.filter(note => note.id !== id);\n    let updated = this.state.notes.filter(note => note.id === id);\n    updated[0][updatedKey] = updatedValue;\n    let updatedList = [...updated, ...notes];\n    this.setState({ notes: updatedList });\n  };\n\n  onSearch = e => {\n    let searchWord = e.target.value.toLowerCase();\n\n    let searchCallback = note => {\n      if (!searchWord) {\n        return {\n          ...note,\n          doesMatchSearch: true\n        };\n      } else if (\n        note.title.toLowerCase().includes(searchWord) ||\n        note.description.toLowerCase().includes(searchWord)\n      ) {\n        return {\n          ...note,\n          doesMatchSearch: true\n        };\n      } else {\n        return {\n          ...note,\n          doesMatchSearch: false\n        };\n      }\n    };\n    let searchResults = this.state.notes.map(searchCallback);\n    this.setState({\n      notes: searchResults,\n      searchText: searchWord\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header\n          searchText={this.state.searchText}\n          newNote={this.newNote}\n          onSearch={this.onSearch}\n        />\n        <NotesList\n          notes={this.state.notes}\n          onType={this.onType}\n          onDelete={this.onDelete}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\nvar rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}